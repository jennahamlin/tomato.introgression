theme_bw()+
theme(axis.title.x = element_blank())+
labs(y="Genome-wide D-statistic (mean with 95% CI)")+
theme(panel.border = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), strip.text.x = element_blank(),
panel.spacing.x = unit(0,"line"))+
scale_x_discrete(labels = my.labels)+
theme(text=element_text(size=18))+
theme(axis.text.x = element_text(colour = 'black'))+
theme(axis.text.y = element_text(colour = 'black'))+
geom_point(data=estimates, aes(x=group, y=MeanD), size=3)+
geom_errorbar(data=estimates, aes(x=group, ymin=MeanD- abs(C95_lwr), ymax=MeanD+ abs(C95_upr)), width=.1)+
geom_hline(yintercept=c(0), linetype='dotted')
mydata<-read.csv('/Users/jhamlin/Desktop/solanum.mating.combined.windows.csv', header = T)
#only keep rows in which Dsites is greater than 20
mydata<- mydata[which(mydata$Dsites > 20),]
#calculate the adjusted pvalue via bonferroniicorrection
#adjustedp<-p.adjust(mydata$Pvalue, "bonferroni")
#append this numeric vector to the end of mydata
#mydata<-cbind(mydata, adjustedp)
#mydata<-mydata[order(-adjustedp),]
my.labels<-c('arc.SI\n\narc.SC\n\npim.SC','hab.SI\n\nhab.SC\n\npim.SC',
'per.SI\n\nper.SI\n\npim.SC')
# Create a data frame 'estimates' to hold...
# the means and 95% confidence intervals:
estimates <- expand.grid(group=levels(mydata$group))
#  mean D using tapply()
estimates$MeanD  <- tapply(mydata$Dstat.alwaysABBAminusBABA, mydata$group, mean)
#add the sum of each columns to estimate proportion of genome to experience introgression
estimates$sum.BBAA<-tapply(mydata$BBAA, mydata$group, sum)
estimates$sum.ABBA<-tapply(mydata$ABBA, mydata$group, sum)
estimates$sum.BABA<-tapply(mydata$BABA, mydata$group, sum)
##### Means with 95% CIs
lm1<-lm(Dstat.alwaysABBAminusBABA ~ group, data=mydata)
# add 95% CI upper and lower bounds to estimates dataframe
estimates$C95_lwr  <- predict(lm1, newdata= estimates, interval="confidence")[,2]
estimates$C95_upr  <- predict(lm1, newdata= estimates, interval="confidence")[,3]
#subset and just plot the values which are significant
#mydata<-subset(mydata, adjustedp<0.06, select=c(group, Dstat.alwaysABBAminusBABA))
mydata <- subset(mydata, group=='arcSI.arcSC.pimSC' | group=='habSI.habSC.pimSC' | group=='perSI.perSC.pimSC',
select=c(group, Dstat.alwaysABBAminusBABA. Pvalue))
mydata <- subset(mydata, group=='arcSI.arcSC.pimSC' | group=='habSI.habSC.pimSC' | group=='perSI.perSC.pimSC',
select=c(group, Dstat.alwaysABBAminusBABA, Pvalue))
ggplot()+
geom_point(data=mydata, alpha = 1/3, color= ifelse(mydata$Pvalue<0.06, 'deepskyblue', 'lightgray'),
aes(x=group,y=Dstat.alwaysABBAminusBABA ), position = position_jitter(w = 0.4))+
theme_bw()+
theme(axis.title.x = element_blank())+
labs(y="Genome-wide D-statistic (mean with 95% CI)")+
theme(panel.border = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), strip.text.x = element_blank(),
panel.spacing.x = unit(0,"line"))+
scale_x_discrete(labels = my.labels)+
theme(text=element_text(size=18))+
theme(axis.text.x = element_text(colour = 'black'))+
theme(axis.text.y = element_text(colour = 'black'))+
geom_point(data=estimates, aes(x=group, y=MeanD), size=3)+
geom_errorbar(data=estimates, aes(x=group, ymin=MeanD- abs(C95_lwr), ymax=MeanD+ abs(C95_upr)), width=.1)+
geom_hline(yintercept=c(0), linetype='dotted')
mydata<-read.csv('/Users/jhamlin/Desktop/solanum.mating.combined.windows.csv', header = T)
#only keep rows in which Dsites is greater than 20
mydata<- mydata[which(mydata$Dsites > 20),]
#calculate the adjusted pvalue via bonferroniicorrection
#adjustedp<-p.adjust(mydata$Pvalue, "bonferroni")
#append this numeric vector to the end of mydata
#mydata<-cbind(mydata, adjustedp)
#mydata<-mydata[order(-adjustedp),]
my.labels<-c('arc.SI\n\narc.SC\n\npim.SC','hab.SI\n\nhab.SC\n\npim.SC',
'per.SI\n\nper.SI\n\npim.SC')
# Create a data frame 'estimates' to hold...
# the means and 95% confidence intervals:
estimates <- expand.grid(group=levels(mydata$group))
#  mean D using tapply()
estimates$MeanD  <- tapply(mydata$Dstat.alwaysABBAminusBABA, mydata$group, mean)
#add the sum of each columns to estimate proportion of genome to experience introgression
estimates$sum.BBAA<-tapply(mydata$BBAA, mydata$group, sum)
estimates$sum.ABBA<-tapply(mydata$ABBA, mydata$group, sum)
estimates$sum.BABA<-tapply(mydata$BABA, mydata$group, sum)
##### Means with 95% CIs
lm1<-lm(Dstat.alwaysABBAminusBABA ~ group, data=mydata)
# add 95% CI upper and lower bounds to estimates dataframe
estimates$C95_lwr  <- predict(lm1, newdata= estimates, interval="confidence")[,2]
estimates$C95_upr  <- predict(lm1, newdata= estimates, interval="confidence")[,3]
#subset and just plot the values which are significant
#mydata<-subset(mydata, adjustedp<0.06, select=c(group, Dstat.alwaysABBAminusBABA))
mydata.subset <- subset(mydata, group=='arcSI.arcSC.pimSC' | group=='habSI.habSC.pimSC' | group=='perSI.perSC.pimSC',
select=c(group, Dstat.alwaysABBAminusBABA, Pvalue))
ggplot()+
geom_point(data=mydata.subset, alpha = 1/3, color= ifelse(mydata.subset$Pvalue<0.06, 'deepskyblue', 'lightgray'),
aes(x=group,y=Dstat.alwaysABBAminusBABA ), position = position_jitter(w = 0.4))+
theme_bw()+
theme(axis.title.x = element_blank())+
labs(y="Genome-wide D-statistic (mean with 95% CI)")+
theme(panel.border = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), strip.text.x = element_blank(),
panel.spacing.x = unit(0,"line"))+
scale_x_discrete(labels = my.labels)+
theme(text=element_text(size=18))+
theme(axis.text.x = element_text(colour = 'black'))+
theme(axis.text.y = element_text(colour = 'black'))+
geom_point(data=estimates, aes(x=group, y=MeanD), size=3)+
geom_errorbar(data=estimates, aes(x=group, ymin=MeanD- abs(C95_lwr), ymax=MeanD+ abs(C95_upr)), width=.1)+
geom_hline(yintercept=c(0), linetype='dotted')
mydata<-read.csv('/Users/jhamlin/Desktop/solanum.mating.combined.windows.csv', header = T)
#only keep rows in which Dsites is greater than 20
mydata<- mydata[which(mydata$Dsites > 20),]
#calculate the adjusted pvalue via bonferroniicorrection
#adjustedp<-p.adjust(mydata$Pvalue, "bonferroni")
#append this numeric vector to the end of mydata
#mydata<-cbind(mydata, adjustedp)
#mydata<-mydata[order(-adjustedp),]
my.labels<-c('arc.SI\n\narc.SC\n\npim.SC','hab.SI\n\nhab.SC\n\npim.SC',
'per.SI\n\nper.SI\n\npim.SC')
mydata.subset <- subset(mydata, group=='arcSI.arcSC.pimSC' | group=='habSI.habSC.pimSC' | group=='perSI.perSC.pimSC',
select=c(group, Dstat.alwaysABBAminusBABA, Pvalue))
# Create a data frame 'estimates' to hold...
# the means and 95% confidence intervals:
estimates <- expand.grid(group=levels(mydata.subset$group))
#  mean D using tapply()
estimates$MeanD  <- tapply(mydata.subseta$Dstat.alwaysABBAminusBABA, mydata.subset$group, mean)
#add the sum of each columns to estimate proportion of genome to experience introgression
estimates$sum.BBAA<-tapply(mydata.subset$BBAA, mydata.subset$group, sum)
estimates$sum.ABBA<-tapply(mydata.subset$ABBA, mydata.subset$group, sum)
estimates$sum.BABA<-tapply(mydata.subset$BABA, mydata.subset$group, sum)
##### Means with 95% CIs
lm1<-lm(Dstat.alwaysABBAminusBABA ~ group, data=mydata.subset)
# add 95% CI upper and lower bounds to estimates dataframe
estimates$C95_lwr  <- predict(lm1, newdata= estimates, interval="confidence")[,2]
estimates$C95_upr  <- predict(lm1, newdata= estimates, interval="confidence")[,3]
#subset and just plot the values which are significant
#mydata<-subset(mydata, adjustedp<0.06, select=c(group, Dstat.alwaysABBAminusBABA))
ggplot()+
geom_point(data=mydata.subset, alpha = 1/3, color= ifelse(mydata.subset$Pvalue<0.06, 'deepskyblue', 'lightgray'),
aes(x=group,y=Dstat.alwaysABBAminusBABA ), position = position_jitter(w = 0.4))+
theme_bw()+
theme(axis.title.x = element_blank())+
labs(y="Genome-wide D-statistic (mean with 95% CI)")+
theme(panel.border = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), strip.text.x = element_blank(),
panel.spacing.x = unit(0,"line"))+
scale_x_discrete(labels = my.labels)+
theme(text=element_text(size=18))+
theme(axis.text.x = element_text(colour = 'black'))+
theme(axis.text.y = element_text(colour = 'black'))+
geom_point(data=estimates, aes(x=group, y=MeanD), size=3)+
geom_errorbar(data=estimates, aes(x=group, ymin=MeanD- abs(C95_lwr), ymax=MeanD+ abs(C95_upr)), width=.1)+
geom_hline(yintercept=c(0), linetype='dotted')
#####################mating system trios and entire genomes
mydata<-read.csv('/Users/jhamlin/Desktop/solanum.mating.combined.windows.csv', header = T)
#only keep rows in which Dsites is greater than 20
mydata<- mydata[which(mydata$Dsites > 20),]
mydata.subset <- subset(mydata, group=='arcSI.arcSC.pimSC' | group=='habSI.habSC.pimSC' | group=='perSI.perSC.pimSC',
select=c(group, Dstat.alwaysABBAminusBABA, Pvalue))
# Create a data frame 'estimates' to hold...
# the means and 95% confidence intervals:
estimates <- expand.grid(group=levels(mydata.subset$group))
estimates
View(mydata.subset)
mydata.subset <- subset(mydata, group=='arcSI.arcSC.pimSC' | group=='habSI.habSC.pimSC' | group=='perSI.perSC.pimSC',
select=c(group, Dstat.alwaysABBAminusBABA, Pvalue))
# Create a data frame 'estimates' to hold...
# the means and 95% confidence intervals:
estimates <- expand.grid(group=levels(mydata.subset$group))
estimates
#####################mating system trios and entire genomes
mydata<-read.csv('/Users/jhamlin/Desktop/solanum.mating.combined.windows.csv', header = T)
#only keep rows in which Dsites is greater than 20
mydata<- mydata[which(mydata$Dsites > 20),]
mydata.subset <- subset(mydata, group=='arcSI.arcSC.pimSC' | group=='habSI.habSC.pimSC' | group=='perSI.perSC.pimSC',
select=c(group, Dstat.alwaysABBAminusBABA, Pvalue))
# Create a data frame 'estimates' to hold...
# the means and 95% confidence intervals:
estimates <- expand.grid(group=levels(mydata.subset$group))
#  mean D using tapply()
estimates$MeanD  <- tapply(mydata.subset$Dstat.alwaysABBAminusBABA, mydata.subset$group, mean)
#add the sum of each columns to estimate proportion of genome to experience introgression
estimates$sum.BBAA<-tapply(mydata.subset$BBAA, mydata.subset$group, sum)
View(estimates)
mydata.subset <- subset(mydata, group=='arcSI.arcSC.pimSC' | group=='habSI.habSC.pimSC' | group=='perSI.perSC.pimSC',
select=c(group, BBAA, ABBA, BABA, Dstat.alwaysABBAminusBABA, Pvalue))
# Create a data frame 'estimates' to hold...
# the means and 95% confidence intervals:
estimates <- expand.grid(group=levels(mydata.subset$group))
#  mean D using tapply()
estimates$MeanD  <- tapply(mydata.subset$Dstat.alwaysABBAminusBABA, mydata.subset$group, mean)
#add the sum of each columns to estimate proportion of genome to experience introgression
estimates$sum.BBAA<-tapply(mydata.subset$BBAA, mydata.subset$group, sum)
estimates$sum.ABBA<-tapply(mydata.subset$ABBA, mydata.subset$group, sum)
estimates$sum.BABA<-tapply(mydata.subset$BABA, mydata.subset$group, sum)
##### Means with 95% CIs
lm1<-lm(Dstat.alwaysABBAminusBABA ~ group, data=mydata.subset)
# add 95% CI upper and lower bounds to estimates dataframe
estimates$C95_lwr  <- predict(lm1, newdata= estimates, interval="confidence")[,2]
View(estimates)
#####################mating system trios and entire genomes
mydata<-read.csv('/Users/jhamlin/Desktop/solanum.mating.LA0373.combined.windows.csv', header = T)
#only keep rows in which Dsites is greater than 20
mydata<- mydata[which(mydata$Dsites > 20),]
# Create a data frame 'estimates' to hold...
# the means and 95% confidence intervals:
estimates <- expand.grid(group=levels(mydata$group))
#  mean D using tapply()
estimates$MeanD  <- tapply(mydata$Dstat.alwaysABBAminusBABA, mydata$group, mean)
#add the sum of each columns to estimate proportion of genome to experience introgression
estimates$sum.BBAA<-tapply(mydata$BBAA, mydata$group, sum)
estimates$sum.ABBA<-tapply(mydata$ABBA, mydata$group, sum)
estimates$sum.BABA<-tapply(mydata$BABA, mydata$group, sum)
##### Means with 95% CIs
lm1<-lm(Dstat.alwaysABBAminusBABA ~ group, data=mydata)
# add 95% CI upper and lower bounds to estimates dataframe
estimates$C95_lwr  <- predict(lm1, newdata= estimates, interval="confidence")[,2]
estimates$C95_upr  <- predict(lm1, newdata= estimates, interval="confidence")[,3]
my.labels<-c('arc.SI\n\narc.SC\n\npim.SC','hab.SI\n\nhab.SC\n\npim.SC',
'per.SI\n\nper.SI\n\npim.SC')
ggplot()+
geom_point(data=mydata.subset, alpha = 1/3, color= ifelse(mydata.subset$Pvalue<0.06, 'deepskyblue', 'lightgray'),
aes(x=group,y=Dstat.alwaysABBAminusBABA ), position = position_jitter(w = 0.4))+
theme_bw()+
theme(axis.title.x = element_blank())+
labs(y="Genome-wide D-statistic (mean with 95% CI)")+
theme(panel.border = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), strip.text.x = element_blank(),
panel.spacing.x = unit(0,"line"))+
scale_x_discrete(labels = my.labels)+
theme(text=element_text(size=18))+
theme(axis.text.x = element_text(colour = 'black'))+
theme(axis.text.y = element_text(colour = 'black'))+
geom_point(data=estimates, aes(x=group, y=MeanD), size=3)+
geom_errorbar(data=estimates, aes(x=group, ymin=MeanD- abs(C95_lwr), ymax=MeanD+ abs(C95_upr)), width=.1)+
geom_hline(yintercept=c(0), linetype='dotted')
ggplot()+
geom_point(data=mydata, alpha = 1/3, color= ifelse(mydata$Pvalue<0.06, 'deepskyblue', 'lightgray'),
aes(x=group,y=Dstat.alwaysABBAminusBABA ), position = position_jitter(w = 0.4))+
theme_bw()+
theme(axis.title.x = element_blank())+
labs(y="Genome-wide D-statistic (mean with 95% CI)")+
theme(panel.border = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), strip.text.x = element_blank(),
panel.spacing.x = unit(0,"line"))+
scale_x_discrete(labels = my.labels)+
theme(text=element_text(size=18))+
theme(axis.text.x = element_text(colour = 'black'))+
theme(axis.text.y = element_text(colour = 'black'))+
geom_point(data=estimates, aes(x=group, y=MeanD), size=3)+
geom_errorbar(data=estimates, aes(x=group, ymin=MeanD- abs(C95_lwr), ymax=MeanD+ abs(C95_upr)), width=.1)+
geom_hline(yintercept=c(0), linetype='dotted')
estimates
arcSI.arcSC.pimSC<-mydata %>%
group_by(group) %>%
filter(group == "arcSI.arcSC.pimSC")
habSI.habSC.pimSC<-mydata %>%
group_by(group) %>%
filter(group == "habSI.habSC.pimSC")
perSI.perSC.pimSC<-mydata %>%
group_by(group) %>%
filter(group == "perSI.perSC.pimSC")
arcA<-sum(arcSI.arcSC.pimSC$Dleft)
arcB<-sum(arcSI.arcSC.pimSC$Dright)
arcchi<-((arcA-arcB)^2)/(arcA+arcB)
arcchi
pchisq(arcchi, df=1, lower.tail = F)
habA<-sum(habSI.habSC.pimSC$Dleft)
habB<-sum(habSI.habSC.pimSC$Dright)
habchi<-((habA-habB)^2)/(habA+habB)
habchi
pchisq(habchi, df=1, lower.tail = F)
perA<-sum(perSI.perSC.pimSC$Dleft)
perB<-sum(perSI.perSC.pimSC$Dright)
perchi<-((perA-perB)^2)/(perA+perB)
perchi
pchisq(perchi, df=1, lower.tail = F)
dev.off()
tiff("Fig.3.tiff", units="in", width=11, height=8.5, res=300)
#####################mating system trios and entire genomes
mydata<-read.csv('/Users/jhamlin/Desktop/solanum.mating.LA0373.combined.windows.csv', header = T)
#only keep rows in which Dsites is greater than 20
mydata<- mydata[which(mydata$Dsites > 20),]
# Create a data frame 'estimates' to holdnthe means and 95% confidence intervals:
estimates <- expand.grid(group=levels(mydata$group))
#  mean D using tapply()
estimates$MeanD  <- tapply(mydata$Dstat.alwaysABBAminusBABA, mydata$group, mean)
#add the sum of each columns to estimate proportion of genome to experience introgression
estimates$sum.BBAA<-tapply(mydata$BBAA, mydata$group, sum)
estimates$sum.ABBA<-tapply(mydata$ABBA, mydata$group, sum)
estimates$sum.BABA<-tapply(mydata$BABA, mydata$group, sum)
##### Means with 95% CIs
lm1<-lm(Dstat.alwaysABBAminusBABA ~ group, data=mydata)
# add 95% CI upper and lower bounds to estimates dataframe
estimates$C95_lwr  <- predict(lm1, newdata= estimates, interval="confidence")[,2]
estimates$C95_upr  <- predict(lm1, newdata= estimates, interval="confidence")[,3]
my.labels<-c('arc.SI\n\narc.SC\n\npim.SC','hab.SI\n\nhab.SC\n\npim.SC',
'per.SI\n\nper.SI\n\npim.SC')
ggplot()+
geom_point(data=mydata, alpha = 1/3, color= ifelse(mydata$Pvalue<0.06, 'deepskyblue', 'lightgray'),
aes(x=group,y=Dstat.alwaysABBAminusBABA ), position = position_jitter(w = 0.4))+
theme_bw()+
theme(axis.title.x = element_blank())+
labs(y="Genome-wide D-statistic (mean with 95% CI)")+
theme(panel.border = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), strip.text.x = element_blank(),
panel.spacing.x = unit(0,"line"))+
scale_x_discrete(labels = my.labels)+
theme(text=element_text(size=18))+
theme(axis.text.x = element_text(colour = 'black'))+
theme(axis.text.y = element_text(colour = 'black'))+
geom_point(data=estimates, aes(x=group, y=MeanD), size=3)+
geom_errorbar(data=estimates, aes(x=group, ymin=MeanD- abs(C95_lwr), ymax=MeanD+ abs(C95_upr)), width=.1)+
geom_hline(yintercept=c(0), linetype='dotted')
dev.off()
tiff("Fig.3.tiff", units="in", width=11, height=8.5, res=300)
#####################mating system trios and entire genomes
mydata<-read.csv('/Users/jhamlin/Desktop/solanum.mating.LA0373.combined.windows.csv', header = T)
#only keep rows in which Dsites is greater than 20
mydata<- mydata[which(mydata$Dsites > 20),]
# Create a data frame 'estimates' to holdnthe means and 95% confidence intervals:
estimates <- expand.grid(group=levels(mydata$group))
#  mean D using tapply()
estimates$MeanD  <- tapply(mydata$Dstat.alwaysABBAminusBABA, mydata$group, mean)
#add the sum of each columns to estimate proportion of genome to experience introgression
estimates$sum.BBAA<-tapply(mydata$BBAA, mydata$group, sum)
estimates$sum.ABBA<-tapply(mydata$ABBA, mydata$group, sum)
estimates$sum.BABA<-tapply(mydata$BABA, mydata$group, sum)
##### Means with 95% CIs
lm1<-lm(Dstat.alwaysABBAminusBABA ~ group, data=mydata)
# add 95% CI upper and lower bounds to estimates dataframe
estimates$C95_lwr  <- predict(lm1, newdata= estimates, interval="confidence")[,2]
estimates$C95_upr  <- predict(lm1, newdata= estimates, interval="confidence")[,3]
my.labels<-c('arc.SI\n\narc.SC\n\npim.SC','hab.SI\n\nhab.SC\n\npim.SC',
'per.SI\n\nper.SI\n\npim.SC')
ggplot()+
geom_point(data=mydata, alpha = 1/3, color= ifelse(mydata$Pvalue<0.06, 'deepskyblue', 'lightgray'),
aes(x=group,y=Dstat.alwaysABBAminusBABA ), position = position_jitter(w = 0.4))+
theme_bw()+
theme(axis.title.x = element_blank())+
labs(y="Genome-wide D-statistic (mean with 95% CI)")+
theme(panel.border = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), strip.text.x = element_blank(),
panel.spacing.x = unit(0,"line"))+
scale_x_discrete(labels = my.labels)+
theme(text=element_text(size=18))+
theme(axis.text.x = element_text(colour = 'black'))+
theme(axis.text.y = element_text(colour = 'black'))+
geom_point(data=estimates, aes(x=group, y=MeanD), size=3)+
geom_errorbar(data=estimates, aes(x=group, ymin=MeanD- abs(C95_lwr), ymax=MeanD+ abs(C95_upr)), width=.1)+
geom_hline(yintercept=c(0), linetype='dotted')
dev.off()
data<-read.csv("/Users/jhamlin/Desktop/jenna/Reference.Populations/Nonclinical.output/Nonclinical.combined.cladetable.csv", header = T)
data.for.ALL.table <- data%>%
filter(grepl('ADMIXED', Population.Desgination))
View(data)
data.for.ALL.table <- data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
group_by(Population.Desgination)%>%
summarize(count = n()) %>%
arrange(desc(count))
data.for.ALL.table
data.for.ALL.table <- data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
group_by(Predominant.Populations)%>%
summarize(count = n()) %>%
arrange(desc(count))
data.for.ALL.table
data.for.ALL.table <- data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
top_n(10, Predominant.Populations)
View(data.for.ALL.table)
data.for.ALL.table <- data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
top_n(10, African.Beer African.Palm.Wine)
data.for.ALL.table <- data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
top_n(10, African.Beer, African.Palm.Wine)
data.for.ALL.table <- data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
top_n(10, 'African.Beer|African.Palm.Wine')
View(data.for.ALL.table)
data.for.ALL.table <- data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
top_n(10, 'African.Beer|African.Palm.Wine|Brazil.1.Oak')
View(data.for.ALL.table)
library(pylr)
install.packages("plyr")
library(plyr)
data<-read.csv("/Users/jhamlin/Desktop/jenna/Reference.Populations/Nonclinical.output/Nonclinical.combined.cladetable.csv", header = T)
library(dplyr)
data<-read.csv("/Users/jhamlin/Desktop/jenna/Reference.Populations/Nonclinical.output/Nonclinical.combined.cladetable.csv", header = T)
data.for.ALL.table <- data%>%
arrange(Brazil.1.Oak,Grape.Win)
data.for.ALL.table <- data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
arrange(Brazil.1.Oak,Grape.Wine)
View(data.for.ALL.table)
View(data.for.ALL.table)
data.for.ALL.table <- data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
arrange(desc(Brazil.1.Oak,Grape.Wine))
data.for.ALL.table <- data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
group_by(African.Palm.Wine, Bahamas, Beer, Brazilian.Bioethanol)%>%
mutate(count = n())
data.for.ALL.table <- data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
add_count(African.Palm.Wine, Bahamas, Beer, Brazilian.Bioethanol)%>%
arrange(desc(African.Palm.Wine), desc(Bahamas), desc(Beer), desc(Brazilian.Bioethanol), desc(Brazil.1.Oak),desc(Brazil.3a.Oak), desc(Brazil.4.Oak),
desc(Clinical.3), desc(European.Oak), desc(Grape.Wine), desc(Japan.1a.Oak), desc(Japan.2a.Oak), desc(Japan.2c.Oak), desc(North.Carolina.Oak),
desc(PA.Oak), desc(Sake), desc(West.Africa))
data.for.ALL.table <- data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
add_count(African.Palm.Wine, Bahamas, Beer, Brazilian.Bioethanol)
View(data.for.ALL.table)
data.for.ALL.table <- data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
group_by(African.Palm.Wine, Bahamas, Beer, Brazilian.Bioethanol)%>%
mutate(count = n())
data<-read.csv("/Users/jhamlin/Desktop/jenna/Reference.Populations/Nonclinical.output/Nonclinical.combined.cladetable.csv", header = T)
data.for.ALL.table <- data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
group_by(African.Palm.Wine, Bahamas, Beer, Brazilian.Bioethanol)%>%
mutate(count = n())
table(data)
View(data)
data.for.ALL.table <- data%>%
select(African.Beer, African.Palm.Wine, Asian.Islands, Asian.Islands.2,
Asian.Islands.3, Banana, Beer, Bahamas, Brazilian.Bioethanol,
Brazil.1.Oak, Brazil.2.Oak, Brazil.3.Oak, Brazil.3a.Oak,
Brazil.4.Oak, Clinical.1, Clinical.2, Clinical.3,Clinical.4,
Clinical.5, European.Oak, Far.East.Asia, Grape.Wine, Jamaica.Sugar,
Japan.1a.Oak, Japan.2a.Oak, Japan.2b.Oak, Japan.2c.Oak, Japan.2d.Oak,
Malaysia, Maryland.Sugar, North.Africa, North.Carolina.Oak, PA.Oak,
Palm.Wine.2, Philippines, Philippines.Fruit, Philippines.Fruit.2,
Rum.Fermentation, Sake, South.African.Soil, Taiwan, West.Africa)
str(data.for.ALL.table)
as.data.frame(table(data.for.ALL.table))
count(data, vars=c("African.Beer", "African.Palm.Wine"))
summarise(group_by(data, African.Beer, African.Palm.Wine), count=n())
summarise(group_by(data, African.Beer, African.Palm.Wine), count=n()))
summarise(group_by(data, African.Beer, African.Palm.Wine),count =n())
count(data, vars=c("African.Beer", "African.Palm.Wine"))
sapply(data, table)
library(tidyr)
data%>%
gather("type", "categories") %>%
table()
data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
gather("type", "categories") %>%
table()
data.for.All%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
gather("type", "categories") %>%
table()
data<-read.csv("/Users/jhamlin/Desktop/jenna/Reference.Populations/Nonclinical.output/Nonclinical.combined.cladetable.csv", header = T)
data.for.All%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
gather("type", "categories") %>%
table()
data<-read.csv("/Users/jhamlin/Desktop/jenna/Reference.Populations/Nonclinical.output/Nonclinical.combined.cladetable.csv", header = T)
data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
gather("type", "categories") %>%
table()
data<-read.csv("/Users/jhamlin/Desktop/jenna/Reference.Populations/Nonclinical.output/Nonclinical.combined.cladetable.csv", header = T)
data.for.All<-data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
gather("type", "categories") %>%
table()
data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
group_by(African.Beer)%>&
tally()
data<-read.csv("/Users/jhamlin/Desktop/jenna/Reference.Populations/Nonclinical.output/Nonclinical.combined.cladetable.csv", header = T)
data.for.All<-data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
group_by(African.Beer)%>&
tally()
data.for.All<-data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
count(African.Beer)
data.for.All<-data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
count(African.Beer)
data.for.All<-data%>%
filter(grepl('ADMIXED', Population.Desgination))
View(data.for.All)
data.for.All<-data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
group_by(African.Beer)%>%
tally()
View(data.for.All)
data.for.All<-data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
count(African.Beer, African.Palm.Wine)%>%
gather("type", "categories") %>%
table()
data.for.All<-data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
count(African.Palm.Wine)%>%
gather("type", "categories") %>%
table()
library(dplyr)
data.for.All<-data%>%
filter(grepl('ADMIXED', Population.Desgination))%>%
count(African.Beer, African.Palm.Wine)%>%
gather("type", "categories") %>%
table()
data<-read.csv("/Users/jhamlin/Desktop/jenna/Reference.Populations/Nonclinical.output/Nonclinical.combined.cladetable.csv", header = T)
data.for.All<-data%>%
count(African.Beer, African.Palm.Wine)%>%
gather("type", "categories") %>%
table()
mtcars %>% count(cyl)
count()
